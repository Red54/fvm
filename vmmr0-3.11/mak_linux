#vmmr0_makefile
$(if $(wildcard config.mak),,$(error Please run configure first))
include config.mak

ARCH_DIR = $(if $(filter $(ARCH),x86_64 i386),x86,$(ARCH))
ARCH_CONFIG := $(shell echo $(ARCH_DIR) | tr '[:lower:]' '[:upper:]')
# NONARCH_CONFIG used for unifdef, and only cover X86 now
NONARCH_CONFIG = $(filter-out $(ARCH_CONFIG),X86)

PREFIX = /usr/local
DESTDIR = /

MAKEFILE_PRE = $(ARCH_DIR)/Makefile.pre

LINUX = ./linux

ifeq ($(ARCH),x86_64)
	YASM = yasm -f elf64 -m amd64 -D CONFIG_X86_64 -D OS_LINUX
else
ifeq ($(ARCH),i386)
	YASM = yasm -f elf32 -m x86 -D CONFIG_X86_32 -D OS_LINUX
else
	$(error invalid ARCH)
endif
endif

all:: vmxhelper.o

	$(MAKE) -C $(KERNELDIR) M=`pwd` \
		LINUXINCLUDE="-I`pwd`/include -Iinclude -I`pwd`/include/uapi \
			$(if $(KERNELSOURCEDIR),\
				-Iinclude2 -I$(KERNELSOURCEDIR)/include \
				-I$(KERNELSOURCEDIR)/include/uapi \
				-I$(KERNELSOURCEDIR)/arch/${ARCH_DIR}/include \
				-I$(KERNELSOURCEDIR)/arch/${ARCH_DIR}/include/uapi, \
				-Iinclude/uapi -Iarch/${ARCH_DIR}/include \
				-Iarch/${ARCH_DIR}/include/uapi) \
			-Iinclude/generated/uapi -Iarch/${ARCH_DIR}/include/generated \
			-Iarch/${ARCH_DIR}/include/generated/uapi \
			-I`pwd`/include-compat -I`pwd`/${ARCH_DIR} \
			-include $(if $(wildcard $(KERNELDIR)/include/generated), \
				include/generated/autoconf.h, \
				include/linux/autoconf.h) \
			-include `pwd`/include/os_interface.h" \
		"$$@"

vmxhelper.o: ./$(ARCH_DIR)/vmxhelper.asm
	$(YASM) -o ./$(ARCH_DIR)/vmxhelper.o ./$(ARCH_DIR)/vmxhelper.asm
	
	
clean:
	$(MAKE) -C $(KERNELDIR) M=`pwd` $@


.PHONY: all clean
